<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.equipment.equipmentMan.mapper.EqBadinfoMapper">
    
    <resultMap type="EqBadinfo" id="EqBadinfoResult">
        <result property="id"    column="id"    />
        <result property="badinfoName"    column="badinfo_name"    />
        <result property="badinfoStat"    column="badinfo_stat"    />
        <result property="badinfoPeo"    column="badinfo_peo"    />
        <result property="badinfoStatus"    column="badinfo_status"    />
        <result property="classroomId"    column="classroom_id"    />
        <result property="badinfoDate"    column="badinfo_date"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEqBadinfoVo">
        select id, badinfo_name, badinfo_stat, badinfo_peo, badinfo_status, classroom_id, badinfo_date, remark from eq_badinfo
    </sql>

    <select id="selectEqBadinfoList" parameterType="EqBadinfo" resultMap="EqBadinfoResult">
        <include refid="selectEqBadinfoVo"/>
        <where>  
            <if test="badinfoName != null  and badinfoName != ''"> and badinfo_name like concat('%', #{badinfoName}, '%')</if>
            <if test="badinfoPeo != null  and badinfoPeo != ''"> and badinfo_peo = #{badinfoPeo}</if>
            <if test="badinfoStatus != null  and badinfoStatus != ''"> and badinfo_status = #{badinfoStatus}</if>
            <if test="badinfoDate != null "> and badinfo_date = #{badinfoDate}</if>
        </where>
    </select>
    
    <select id="selectEqBadinfoById" parameterType="Long" resultMap="EqBadinfoResult">
        <include refid="selectEqBadinfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEqBadinfo" parameterType="EqBadinfo" useGeneratedKeys="true" keyProperty="id">
        insert into eq_badinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="badinfoName != null and badinfoName != ''">badinfo_name,</if>
            <if test="badinfoStat != null and badinfoStat != ''">badinfo_stat,</if>
            <if test="badinfoPeo != null">badinfo_peo,</if>
            <if test="badinfoStatus != null">badinfo_status,</if>
            <if test="classroomId != null">classroom_id,</if>
            <if test="badinfoDate != null">badinfo_date,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="badinfoName != null and badinfoName != ''">#{badinfoName},</if>
            <if test="badinfoStat != null and badinfoStat != ''">#{badinfoStat},</if>
            <if test="badinfoPeo != null">#{badinfoPeo},</if>
            <if test="badinfoStatus != null">#{badinfoStatus},</if>
            <if test="classroomId != null">#{classroomId},</if>
            <if test="badinfoDate != null">#{badinfoDate},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEqBadinfo" parameterType="EqBadinfo">
        update eq_badinfo
        <trim prefix="SET" suffixOverrides=",">
            <if test="badinfoName != null and badinfoName != ''">badinfo_name = #{badinfoName},</if>
            <if test="badinfoStat != null and badinfoStat != ''">badinfo_stat = #{badinfoStat},</if>
            <if test="badinfoPeo != null">badinfo_peo = #{badinfoPeo},</if>
            <if test="badinfoStatus != null">badinfo_status = #{badinfoStatus},</if>
            <if test="classroomId != null">classroom_id = #{classroomId},</if>
            <if test="badinfoDate != null">badinfo_date = #{badinfoDate},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEqBadinfoById" parameterType="Long">
        delete from eq_badinfo where id = #{id}
    </delete>

    <delete id="deleteEqBadinfoByIds" parameterType="String">
        delete from eq_badinfo where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>